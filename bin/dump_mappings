#!/usr/bin/env ruby
require 'dohutil/app/origin'
require 'mapping'
require 'crypt'

opts = Doh::Options.new({
'verbose' => [false, "-v", "--verbose", "extra debug output"],
}, false)


mappings = Mapping::MAPPINGS.collect do |key, value|
  [Crypt.decrypt(key), value, key]
end

mappings.sort! do |elem1, elem2|
  comp = elem2[0].length <=> elem1[0].length
  comp != 0 ? comp : elem1[0] <=> elem2[0]
end

mappings.each do |key, value, encrypted|
  if opts.verbose
    regex_str = Mapping.get_regex(key).inspect
  else
    regex_str = ''
  end
  puts "#{encrypted}: #{key}: #{value} #{regex_str}"
end
